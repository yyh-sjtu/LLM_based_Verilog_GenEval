Sure! Below is a complete implementation of your permutation block module in Verilog. The module takes a 32-bit input, permutes the bits according to a defined table, and produces a 32-bit output.

```verilog
module P_box (
    input wire [31:0] In32,
    output reg [31:0] Out32
);

localparam len_table = 32;
reg [5:0] In32table [0:len_table-1];

initial begin
    In32table[0]  = 15;
    In32table[1]  = 6;
    In32table[2]  = 20;
    In32table[3]  = 10;
    In32table[4]  = 11;
    In32table[5]  = 22;
    In32table[6]  = 5;
    In32table[7]  = 9;
    In32table[8]  = 1;
    In32table[9]  = 7;
    In32table[10] = 8;
    In32table[11] = 4;
    In32table[12] = 12;
    In32table[13] = 13;
    In32table[14] = 14;
    In32table[15] = 17;
    In32table[16] = 16;
    In32table[17] = 25;
    In32table[18] = 19;
    In32table[19] = 23;
    In32table[20] = 18;
    In32table[21] = 26;
    In32table[22] = 28;
    In32table[23] = 27;
    In32table[24] = 29;
    In32table[25] = 31;
    In32table[26] = 30;
    In32table[27] = 0;
    In32table[28] = 2;
    In32table[29] = 3;
    In32table[30] = 21;       
    In32table[31] = 24;
end

// The permutation logic
always @(*) begin
    Out32 = 32'b0; // Initialize output
    for (integer i = 0; i < len_table; i = i + 1) begin
        Out32[i] = In32[In32table[i]]; // Permute according to In32table
    end
end

endmodule
```

### Explanation of the Code:

1. **Module Definition:**
   - The `P_box` module takes a 32-bit input `In32` and outputs a 32-bit result `Out32`.

2. **Local Parameter and Register Declaration:**
   - `In32table`: This register array stores the permutation mapping.

3. **Initial Block:**
   - An `initial` block initializes the `In32table` values.

4. **Permutation Logic:**
   - An `always @(*)` block computes the output `Out32`. It iterates through each index of `In32table` and maps the bits of `In32` to `Out32` based on the indices specified in the permutation table.

This module will behave as intended: when `In32` is updated, `Out32` will reflect the permuted output as defined by `In32table`. Ensure that `In32` and `Out32` are connected properly when using this module in a larger design or simulation.