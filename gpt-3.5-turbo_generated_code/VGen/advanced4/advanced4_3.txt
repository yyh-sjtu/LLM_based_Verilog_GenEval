```verilog
module advshift(
    input clk,
    input load,
    input ena,
    input [1:0] amount,
    input [63:0] data,
    output reg [63:0] q
);

reg [63:0] shifted_data;

always @(posedge clk) begin
    if (load) begin
        if (ena) begin
            case(amount)
                2'b00: shifted_data <= {data[62:0], 1'b0};
                2'b01: shifted_data <= {data[55:0], 8'b0};
                2'b10: shifted_data <= {1'b0, data[63:1]};
                2'b11: shifted_data <= {8'b0, data[63:8]};
            endcase
        end
        else begin
            shifted_data <= data;
        end
    end
end

always @(posedge clk) begin
    if (load) begin
        q <= shifted_data;
    end
end

endmodule
```