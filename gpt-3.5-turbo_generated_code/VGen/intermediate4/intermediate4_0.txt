
reg out;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        present_state <= 0;
    end else begin
        present_state <= next_state;
    end
end

always @(*) begin
    case(present_state)
        0: begin
            out = 1;
            if (in == 0) begin
                next_state = 1;
            end else begin
                next_state = 0;
            end
        end
        1: begin
            out = 0;
            if (in == 0) begin
                next_state = 0;
            end else begin
                next_state = 1;
            end
        end
    endcase
end

endmodule

This Verilog module implements a Moore state machine with two states 0 and 1. The output "out" is high when the state is 0. The state transitions based on the input "in" signal and changes to state 1 when "in" is low. The state machine is synchronous to the clock signal "clk" and can be reset using the "reset" signal.