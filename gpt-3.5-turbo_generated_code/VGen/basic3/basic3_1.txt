Sure, here is the verilog code for the 3-bit priority encoder module as you have described:

```verilog
module priority_encoder(
  input [2:0] in,
  output reg [1:0] pos
);

always @(*) begin
  case(in)
    3'b000: pos = 2'b00;
    3'b001: pos = 2'b00;
    3'b010: pos = 2'b01;
    3'b011: pos = 2'b01;
    3'b100: pos = 2'b10;
    3'b101: pos = 2'b10;
    3'b110: pos = 2'b10;
    3'b111: pos = 2'b11;
  endcase
end

endmodule
```

This module takes a 3-bit input vector 'in' and outputs a 2-bit vector 'pos' which represents the position of the first '1' encountered in the input vector. The priority encoding logic is implemented using a case statement within an always block.