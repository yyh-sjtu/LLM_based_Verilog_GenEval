Give me the next token of the verilog code snippet.

This is an 4x4 systolic array with weight station. Every processing unit(PE) has two input and two output. The function of every PE is to multiply two input and add the value from inner register. The systolic array receives weight from weight buffer and input from input buffer, then output to output buffer.Here's the imcomplete verilog code: 
 ```verilog
module reference(
  input clk,
  input rst,
  input [15:0] weight [0:3] [0:3],
  input [15:0] inputt [0:15],
  output [31:0] outputt [0:15]  
);
// Instantiate 16 PEs 
PE pe00(.clk(clk), .rst(rst), .a(inputt[0]), .b(weight[0][0]), .c(outputt[0]));
PE pe01(.clk(clk), .rst(rst), .a(inputt[1]), .b(weight[0][1]), .c(outputt[1]));
PE pe02(.clk(clk), .rst(rst), .a(inputt[2]), .b(weight[0][2]), .c(outputt[2]));
PE pe03(.clk(clk), .rst(rst), .a(inputt[3]), .b(weight[0][3]), .c(outputt[3]));
PE pe04(.clk(clk), .rst(rst), .a(inputt[4]), .b(weight[1][0]), .c(outputt[4]));
PE pe05(.clk(clk), .rst(rst), .a(inputt[5]), .b(weight[1][1]), .c(outputt[5]));
PE pe06(.clk(clk), .rst(rst), .a(inputt[6]), .b(weight[1][2]), .c(outputt[6]));
PE pe07(.clk(clk), .rst(rst), .a(inputt[7]), .b(weight[1][3]), .c(outputt[7]));
PE pe08(.clk(clk), .rst(rst), .a(inputt[8]), .b(weight[2][0]), .c(outputt[8]));
PE pe09(.clk(clk), .rst(rst), .a(inputt[9]), .b(weight[2][1]), .c(outputt[9]));
PE pe10(.clk(clk), .rst(rst), .a(inputt[10]), .b(weight[2][2]), 
```
Please give me the next token of the code snippet.