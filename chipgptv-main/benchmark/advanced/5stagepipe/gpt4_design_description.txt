You are now acting as a professional verilog programmer.

This five stages is a hardware pipeline that fetches instruct and execute. The instruction is add and sub. Executor fetch two operand and write back to memory. 

// Instruction types
`define ADD_INST 2'b00
`define SUB_INST 2'b01
// Pipeline stages
module fetch_stage(
  input clk,
  output reg [31:0] inst,
  input [31:0] instr_mem_in [0:31],
  input rst
);

module decode_stage(
  input clk,
  input [31:0] inst,
  output reg [4:0] rs1,
  output reg [4:0] rs2,
  output reg [1:0] op,
  output reg [4:0] rd

);

module execute_stage(
  input clk,
  input [4:0] rs1,
  input [4:0] rs2,
  input [31:0] reg_file [0:31],
  input [1:0] op,
  output reg [31:0] result,
  input [4:0] rdin1,//
  output reg [4:0] rdout1//
);

module memory_stage(
  input clk,
  input [31:0] alu_result,
  output reg [31:0] mem_data,
  input [4:0] rdin2,//
  output reg [4:0] rdout2//
);

module writeback_stage(
  input clk,
  input [31:0] mem_data,
  input [4:0] rd,
  output reg [31:0] reg_file[0:31]
);
