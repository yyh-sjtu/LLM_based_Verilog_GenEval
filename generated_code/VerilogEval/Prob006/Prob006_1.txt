As a professional RTL designer, I would implement the TopModule in Verilog as follows:

```verilog
module TopModule(
    input [7:0] in,
    output reg [7:0] out
);

always @(*) begin
    out = 8'b0; // Initialize output to 0
    for (int i = 0; i < 8; i = i+1) begin
        out[i] = in[7-i]; // Reverse bit ordering of input and write to output
    end
end

endmodule
```

This Verilog code defines a module named TopModule with an 8-bit input port 'in' and an 8-bit output port 'out'. Inside the module, there is an always block that triggers whenever there is a change in the input. It iterates over the 8 bits of the input, reversing the bit ordering and writing the result to the output.

This implementation should effectively reverse the bit ordering of the input and write the result to the output as specified in the interface.