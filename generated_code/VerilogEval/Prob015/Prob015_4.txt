Certainly! Below is an RTL implementation in Verilog for the `TopModule` that takes a 16-bit input and outputs two 8-bit signals: one for the high byte and one for the low byte.

```verilog
module TopModule (
    input  wire [15:0] in,    // 16-bit input
    output wire [7:0]  out_hi, // 8-bit high byte output
    output wire [7:0]  out_lo   // 8-bit low byte output
);

    // Assign the high and low bytes from the 16-bit input
    assign out_hi = in[15:8]; // Extracting the upper 8 bits (high byte)
    assign out_lo = in[7:0];  // Extracting the lower 8 bits (low byte)

endmodule
```

### Explanation:

1. **Module Declaration**:
   - The module is named `TopModule` and contains the specified input and output ports.
   - `in` is a 16-bit input wire.
   - `out_hi` and `out_lo` are 8-bit output wires.

2. **Port Assignment**:
   - The `assign` statements are used to split the 16-bit input `in` into the upper and lower bytes:
     - `out_hi` is assigned the most significant byte (MSB) from `in`, which corresponds to bits `[15:8]`.
     - `out_lo` is assigned the least significant byte (LSB) from `in`, which corresponds to bits `[7:0]`.

This module is purely combinational, as it directly maps inputs to outputs without any state (registers or flip-flops). You can instantiate this module in a larger design as needed.