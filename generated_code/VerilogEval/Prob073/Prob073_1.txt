Sure! Below is a Verilog implementation for the `TopModule` based on your specified interface and functionality. The module includes 16 D flip-flops, and utilizes the `byteena` input to control which bytes of the `d` input are written to the output `q` on each clock cycle.

```verilog
module TopModule (
    input  clk,
    input  resetn,
    input  [1:0] byteena,   // 2-bit byte enable
    input  [15:0] d,        // 16-bit data input
    output reg [15:0] q     // 16-bit data output
);

    // 16 D flip-flops
    reg [15:0] dff;

    always @(posedge clk) begin
        if (!resetn) begin
            // Synchronous active-low reset
            dff <= 16'b0;
        end else begin
            // Conditional write based on byteena
            if (byteena[0]) begin
                // Write to lower byte d[7:0]
                dff[7:0] <= d[7:0];
            end
            
            if (byteena[1]) begin
                // Write to upper byte d[15:8]
                dff[15:8] <= d[15:8];
            end
        end
    end
    
    // Assign output q from the flip-flop register
    always @(posedge clk) begin
        q <= dff;
    end

endmodule
```

### Explanation:

1. **Inputs and Outputs**:
   - The module defines inputs `clk`, `resetn`, `byteena`, and `d`, along with output `q`.
   
2. **Reset Logic**:
   - The reset is synchronous and active-low. When `resetn` is low, all registers are reset to zero (`16'b0`).
   
3. **Byte Enable Logic**:
   - The two bits of `byteena` determine which part of the input `d` gets written to `dff` (the internal register):
     - `byteena[0]`: If it's high, the lower byte `d[7:0]` is written to `dff[7:0]`.
     - `byteena[1]`: If it's high, the upper byte `d[15:8]` is written to `dff[15:8]`.

4. **Output Assignment**:
   - The output `q` is updated on each positive edge of the clock to reflect the current value stored in `dff`.

### Note:
This implementation assumes that a synchronous reset is desired based on your requirements. Ensure to integrate further testing as needed in a testbench for functional verification.