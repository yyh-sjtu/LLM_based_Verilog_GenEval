Here is the Verilog code for the Mealy FSM detection circuit:

```verilog
module fsm (
    input wire IN,
    input wire CLK,
    input wire RST,
    output reg MATCH
);

// FSM states definition
parameter S0 = 2'b00;
parameter S1 = 2'b01;
parameter S2 = 2'b10;
parameter S3 = 2'b11;

// Current state and next state declaration
reg [1:0] state, next_state;

// State transition and output logic
always @ (posedge CLK or posedge RST) begin
    if (RST) begin
        state <= S0;
        MATCH <= 0;
    end else begin
        state <= next_state;
    end
end

always @ (*) begin
    case(state)
        S0: begin
            if (IN) next_state = S1;
            else next_state = S0;
            MATCH = 0;
        end
        S1: begin
            if (IN) next_state = S2;
            else next_state = S0;
            MATCH = 0;
        end
        S2: begin
            if (IN) next_state = S3;
            else next_state = S0;
            MATCH = 0;
        end
        S3: begin
            if (IN) next_state = S1;
            else next_state = S0;
            MATCH = 1;
        end
        default: begin
            next_state = S0;
            MATCH = 0;
        end
    endcase
end

endmodule
```

Please note that this Verilog code is a basic implementation of the Mealy FSM detection circuit according to the provided requirements. You may need to modify it further based on your specific design constraints and requirements.