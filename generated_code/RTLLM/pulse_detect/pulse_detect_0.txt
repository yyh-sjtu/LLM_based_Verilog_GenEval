module pulse_detect (
    input clk,
    input rst_n,
    input data_in,
    output reg data_out
);

// Define states for pulse detection process
parameter IDLE = 2'd0;
parameter STATE_1 = 2'd1;
parameter STATE_2 = 2'd2;

// Define register to keep track of current state
reg [1:0] state;

// Initialize output to 0
assign data_out = 0;

// State transition logic
always @(posedge clk or negedge rst_n) begin
    if(~rst_n) begin
        state <= IDLE;
        data_out <= 0;
    end else begin
        case(state)
            IDLE: begin
                if(data_in == 1) begin
                    state <= STATE_1;
                end
            end
            STATE_1: begin
                if(data_in == 0) begin
                    state <= STATE_2;
                end
            end
            STATE_2: begin
                if(data_in == 1) begin
                    state <= IDLE;
                    data_out <= 1;
                end
            end
        endcase
    end
end

endmodule