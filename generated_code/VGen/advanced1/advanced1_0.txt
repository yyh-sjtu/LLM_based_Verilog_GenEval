// Define internal signals
reg [7:0] sum;
reg sign_a, sign_b, sign_s, overflow;

// Extract signs of inputs a and b
assign sign_a = a[7];
assign sign_b = b[7];

// Perform addition
assign sum = a + b;

// Extract sign of sum
assign sign_s = sum[7];

// Detect overflow
always @* begin
    if (sign_a == sign_b && sign_s != sign_a) begin
        overflow = 1;
    end else begin
        overflow = 0;
    end
end

// Assign output signals
assign s = sum;
assign overflow = overflow;

endmodule