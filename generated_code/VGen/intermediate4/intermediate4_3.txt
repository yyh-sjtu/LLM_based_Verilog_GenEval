
reg out;

parameter STATE_0 = 1'b0;
parameter STATE_1 = 1'b1;

always @(posedge clk or posedge reset) begin
    if (reset) begin
        present_state <= STATE_0;
    end else begin
        present_state <= next_state;
    end
end

always @(present_state, in) begin
    case (present_state)
        STATE_0: begin
            if (in) begin
                next_state <= STATE_1;
            end else begin
                next_state <= STATE_0;
            end
        end
        STATE_1: begin
            if (in) begin
                next_state <= STATE_1;
            end else begin
                next_state <= STATE_0;
            end
        end
    endcase
end

assign out = (present_state == STATE_0) ? 1'b1 : 1'b0;

endmodule
